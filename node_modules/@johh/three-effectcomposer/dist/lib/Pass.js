'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable no-underscore-dangle */

var _three = require('three');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var camera = new _three.OrthographicCamera(-1, 1, 1, -1, 0, 1);
var geometry = new _three.PlaneBufferGeometry(2, 2);

var _FullScreenQuad = function () {
	function _FullScreenQuad(material) {
		_classCallCheck(this, _FullScreenQuad);

		this._mesh = new _three.Mesh(geometry, material);
	}

	_createClass(_FullScreenQuad, [{
		key: 'render',
		value: function render(renderer) {

			renderer.render(this._mesh, camera);
		}
	}, {
		key: 'material',
		get: function get() {

			return this._mesh.material;
		},
		set: function set(value) {

			this._mesh.material = value;
		}
	}]);

	return _FullScreenQuad;
}();

var Pass = function () {
	function Pass() {
		_classCallCheck(this, Pass);

		this.enabled = true;
		this.needsSwap = false;
		this.clear = false;
		this.renderToScreen = false;
	}

	_createClass(Pass, [{
		key: 'setSize',
		value: function setSize(width, height) {}
	}, {
		key: 'render',
		value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {

			console.error('THREE.Pass: .render() must be implemented in derived pass.');
		}
	}]);

	return Pass;
}();

Pass.FullScreenQuad = _FullScreenQuad;
exports.default = Pass;